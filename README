Aqui est√° um **README.md profissional e bem estruturado** para o seu projeto **SABER - Assistente Educacional com IA**, com foco em clareza, organiza√ß√£o e impacto, sem exagerar no uso de emojis:

---

# SABER - Sistema de An√°lise e Benef√≠cio Educacional em Relat√≥rio

**SABER** √© um assistente educacional inteligente constru√≠do com foco em promover o aprendizado significativo de alunos e apoiar professores no processo de ensino-aprendizagem. Utilizando intelig√™ncia artificial com personaliza√ß√£o de personalidade e mem√≥ria contextual, o sistema gera respostas claras, motivadoras e adaptadas ao perfil do estudante.

## Principais Funcionalidades

* **Chat interativo com IA** educacional
* **Configura√ß√µes de personalidade da IA**: profissional, amig√°vel, criativo, t√©cnico ou equilibrado
* **Hist√≥rico de conversas organizado** por datas
* **Painel de configura√ß√µes avan√ßadas** com controle de criatividade, contexto e tokens
* **Persist√™ncia com banco de dados** e API REST
* **Gera√ß√£o autom√°tica de t√≠tulos** para conversas
* **Interface moderna e responsiva**, com suporte a tema escuro

---

## Estrutura do Projeto

```
saber/
‚îú‚îÄ‚îÄ static/
‚îÇ   ‚îú‚îÄ‚îÄ index.html        # Interface principal
‚îÇ   ‚îú‚îÄ‚îÄ styles.css        # Estilo visual da aplica√ß√£o
‚îÇ   ‚îî‚îÄ‚îÄ script.js         # L√≥gica de interface e intera√ß√£o com a API
‚îú‚îÄ‚îÄ server.js             # Servidor Node.js com integra√ß√£o √† IA Cohere
‚îú‚îÄ‚îÄ db.js                 # Banco de dados e fun√ß√µes auxiliares (requer configura√ß√£o)
‚îú‚îÄ‚îÄ .env                  # Chave de API e vari√°veis sens√≠veis (n√£o inclu√≠do)
‚îî‚îÄ‚îÄ README.md             # Documenta√ß√£o do projeto
```

---

## Tecnologias Utilizadas

* **Frontend**: HTML5, CSS3 (Custom Design System), JavaScript
* **Backend**: Node.js + Express
* **IA**: [Cohere API](https://cohere.com/)
* **Banco de Dados**: (PostgreeSQL)
* **Outros**: LocalStorage, persist√™ncia de configura√ß√µes, exporta√ß√£o de hist√≥rico em JSON

---

## Como Executar Localmente

### 1. Clone o reposit√≥rio

```bash
git clone https://github.com/seu-usuario/saber.git
cd saber
```

### 2. Instale as depend√™ncias

```bash
npm install
```

### 3. Configure o arquivo `.env`

Crie um arquivo `.env` com sua chave da API da Cohere:

```
COHERE_API_KEY=sua_chave_aqui
```

### 4. Inicie o servidor

```bash
node server.js
```

Acesse: `http://localhost:3000`

---

## API Endpoints

* `POST /api/chat` ‚Äì Envia mensagem e retorna resposta da IA
* `GET /api/history` ‚Äì Recupera hist√≥rico de conversas
* `GET /api/conversation/:id` ‚Äì Detalhes de uma conversa
* `POST /api/new-conversation` ‚Äì Cria nova conversa
* `DELETE /api/conversation/:id` ‚Äì Remove uma conversa
* `PUT /api/conversation/:id/title` ‚Äì Atualiza o t√≠tulo da conversa
* `GET /api/stats` ‚Äì Retorna estat√≠sticas gerais

---

## Personaliza√ß√£o

O usu√°rio pode configurar:

* Temperatura da IA (criatividade)
* Tamanho da resposta (m√°x. tokens)
* Personalidade da IA
* Quantidade de mensagens anteriores (contexto)
* Tema claro/escuro
* Efeitos visuais e sonoros

Tudo isso est√° dispon√≠vel atrav√©s do **modal de configura√ß√µes** com UI intuitiva.

---

## Uso T√≠pico

1. O aluno inicia uma nova conversa com uma d√∫vida ou tema.
2. A IA responde com base no prompt educacional adaptado.
3. A conversa √© salva automaticamente, com t√≠tulo gerado.
4. O hist√≥rico pode ser acessado, exportado ou apagado via interface.

---

## Diferenciais

* Foco **100% educacional**
* **An√°lise de contexto e mem√≥ria da conversa**
* Interface moderna, leve e responsiva
* Integra√ß√£o com **IA customiz√°vel** por personalidade

---

## Requisitos

* Node.js v16 ou superior
* Chave de API da Cohere
* Navegador moderno (Chrome, Firefox, Edge)

---

## Contribui√ß√£o

Pull Requests s√£o bem-vindos! Caso deseje contribuir:

1. Fork este reposit√≥rio
2. Crie uma branch (`git checkout -b minha-feature`)
3. Fa√ßa commit das mudan√ßas (`git commit -m 'Nova funcionalidade'`)
4. Push para a branch (`git push origin minha-feature`)
5. Abra um Pull Request

---

## üë®‚Äçüíª Equipe de Desenvolvimento

- **Ramon Pires**: Programador Principal e L√≠der do Projeto  
- **Kenai Almeida**: Desenvolvedor Frontend e Designer 
- **Stefano Morosini**: Desenvolvedor Full-stack
- **Guilherme Moura**: Desenvolvedor Full-stack e Vice-l√≠der do Projeto
- **Ruan Reiler**: Designer Gr√°fico e UX/UI  
- **Lucas Borges**: Gestor de Documenta√ß√£o e Testes  
- **Luiz Ot√°vio**: Desenvolvedor Front-End  
- **Ian de Paula**: Comunica√ß√£o e Divulga√ß√£o  

---

## üìú Licen√ßa

Este projeto √© de uso educacional e est√° em desenvolvimento por estudantes do Ensino M√©dio com foco em solu√ß√µes tecnol√≥gicas aplicadas √† educa√ß√£o.

